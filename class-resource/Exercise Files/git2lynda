#!/usr/bin/env python
import os
import re
import argparse
import shutil

parser = argparse.ArgumentParser(description='Convert flat git working directories to Lynda structure.')
parser.add_argument('git_folder', help='Folder with working files in CC_SS_(begin|end) format (e.g. 02_01_begin).')
parser.add_argument('target_folder', help='Target folder path.')
args = parser.parse_args()

gf_pattern = re.compile('(?P<ch>\d+)\_(?P<sec>\d+)\_(?P<be>\w+)')
gfa = sorted([f for f in os.listdir(args.git_folder) if gf_pattern.match(f)])
csa = [gf_pattern.match(f).groups() for f in gfa]
last_chapter = max([int(i[0]) for i in csa])

csca = [max(k) if k else 0 for k in [[int(j[1]) for j in csa if int(j[0]) == ch] for ch in range(1, last_chapter+1)]]

print(csca)
igfa = 0

for ch in range(1, len(csca)+1):
    for sec in range(1, csca[ch-1]+1):
        for ss in ['begin', 'end']:
            src = '%02d_%02d_%s' % (ch, sec, ss)
            dst = 'Ch%d/%02d_%02d/%s' % (ch, ch, sec, ss)
            if src != gfa[igfa] and (igfa < len(gfa) -1 and src == gfa[igfa+1]):
                igfa += 1

            if not os.path.isdir(os.path.join(args.target_folder, dst)):
                shutil.copytree(os.path.join(args.git_folder, gfa[igfa]), os.path.join(args.target_folder, dst))
                print('%s=>%s' % (gfa[igfa], dst))
            else:
                print('skipping %s: directory exists' % dst)
